summarise(threepointsallowed = length(which(points == 3)), twopointsallowed = length(which(points == 2)), FGAllowed = sum(event_type == "shot") + sum(event_type == "miss"))
sumpointallowed <- sumpointallowed %>% filter(OT != 1)
sumpointallowed <- rename(sumpointallowed,team = OT)  %>% mutate(EFGAP = (twopointsallowed + 1.5*threepointsallowed) / FGAllowed) %>% select(team, FGAllowed)
summary <- left_join(summary,sumpointallowed, by = "team")
reg3 <- lm(PAPG ~ ORAPG + DRPG + EFGAP, summary)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(dplyr)
library(readr)
library(ggplot2)
library(Hmisc)
library(ggthemes)
library(knitr)
library(car)
library(pander)
setwd("D:/College Study/DA 101/RPractice/Lab 6")
data1516 <- read_csv("1516NBAcleaned.csv")
data1415 <- read_csv("1415NBAcleaned.csv")
summary <- data1516 %>%
group_by(OT) %>% filter(OT != 1) %>%
summarise(PA = sum(na.rm = TRUE,points), ORA = sum(type == "rebound offensive"))
summary <- rename(summary,team = OT) %>% mutate(PAPG = PA / 82, ORAPG = ORA / 82)
glimpse(summary)
#plot offensive rebound allowed per game and point allowed per game
summary %>%
ggplot(aes(ORAPG,PAPG)) + geom_point() +
geom_smooth(method = lm) +
labs(x = "Offensive Rebound Allowed per Game", y = "Points Allowed per Game", title = "Relationship between Offensive Rebound Allowed and Points Allowed \n (Per game)") + theme(plot.title = element_text(hjust = 0.5)) + theme_tufte()
reg1 <- lm(PAPG ~ ORAPG, summary)
summary(reg1)
#Residual Plot
residplot1 <- mutate(summary, resid = resid(reg1))
#histogram plot
residplot1 %>%
ggplot(aes(resid)) +
geom_histogram(colour = "blue", fill = "red", bins = 20) + labs(x = "Residuals", y = "Counts", title = "Residual Histograms of Offensive Rebound Allowed and Points Allowed \n (Per game)") + theme(plot.title = element_text(hjust = 0.5))
#test for normality and homoskedasticity
shapiro.test(residplot1$resid)
ncvTest(reg1)
sumdefensivereb <- data1516 %>%
group_by(team) %>%
summarise(DR = sum(type == "rebound defensive"))
sumdefensivereb <- sumdefensivereb %>%
filter(!is.na(team)) %>% mutate(DRPG = DR / 82)
summary <- left_join(summary,sumdefensivereb, by = "team")
#plot defensive rebound per game and point allowed per game
summary %>%
ggplot(aes(DRPG,PAPG)) + geom_point() +
geom_smooth(method = lm) +
labs(x = "Defensive Rebound per Game", y = "Points Allowed per Game", title = "Relationship between Defensive Rebound and Points Allowed \n (Per game)") + theme(plot.title = element_text(hjust = 0.5)) + theme_tufte()
reg2 <- lm(PAPG~DRPG+ORAPG, summary)
summary(reg2)
cor.test(summary$PAPG,summary$DRPG)
#Residual Plot
residplot2 <- mutate(summary, resid = resid(reg2))
#histogram plot
residplot2 %>%
ggplot(aes(resid)) +
geom_freqpoly(colour = "blue") + labs(x = "Residuals", y = "Counts", title = "Residual Histograms of Denfensive Rebound and Points Allowed \n (Per game)") + theme(plot.title = element_text(hjust = 0.5))
#test for normality and homoskedasticity
shapiro.test(residplot2$resid)
ncvTest(reg2)
sumpointallowed <- data1516 %>%
group_by(OT) %>%
summarise(threepointsallowed = length(which(points == 3)), twopointsallowed = length(which(points == 2)), FGAllowed = sum(event_type == "shot") + sum(event_type == "miss"))
sumpointallowed <- sumpointallowed %>% filter(OT != 1)
sumpointallowed <- rename(sumpointallowed,team = OT)  %>% mutate(EFGAP = (twopointsallowed + 1.5*threepointsallowed) / FGAllowed) %>% select(team, FGAllowed,EFGAP)
summary <- left_join(summary,sumpointallowed, by = "team")
reg3 <- lm(PAPG ~ ORAPG + DRPG + EFGAP, summary)
summary(reg3)
pander(confint(reg3, "EFGAP", level = 0.95))
pander(confint(reg3, "DRPG", level = 0.95))
pander(confint(reg3, "ORAPG", level = 0.95))
subsummary <- data1516 %>%
group_by(OT) %>%
summarise(OpponentTO = sum(event_type == "turnover"), FTAllowed = sum(event_type == "free throw" & result == "made"))
subsummary <- subsummary %>% filter(OT != 1) %>% rename(team = OT)
summary <- left_join(summary,subsummary, by = "team")
#Opponent Possession
summary <- mutate(Possession = FGAllowed + .44*FTAllowed - ORA + OpponentTO, summary)
#Defensive rebound rate, Opponent Turnover rate, Points allowed per 100 Possession
summary <- mutate(DRR = DR / (DR + ORA),OpponentTR = OpponentTO/FGAllowed, OpponentFTR = FTAllowed/FGAllowed, PAP = PA/Possession, summary)
reg4 <- lm(PAP~DRR, summary)
summary(reg4)
reg5 <- lm(PAP~EFGAP, summary)
summary(reg5)
reg6 <- lm(PAP~ DRR + EFGAP, summary)
summary(reg6)
reg7 <- lm(PAP~DRR+EFGAP+OpponentTR, summary)
summary(reg7)
reg8 <- lm(PAP~DRR+EFGAP+OpponentTR+OpponentFTR, summary)
summary(reg8)
SAS1516 <- data.frame(EFGAP = 0.4767477, DRR = 0.7914453, OpponentTR = 0.1746907, OpponentFTR = 0.1819943)
predict(reg8,SAS1516,interval = "predict")
data1415$team <- sub("^", "14", data1415$team)
data1415$OT <- sub("^", "14", data1415$OT)
#OT = opposing team
data1516$team <- sub("^", "15", data1516$team)
data1516$OT <- sub("^", "15", data1516$OT)
data1415 <- mutate(data1415, year = "2014")
data1516 <- mutate(data1516, year = "2015")
SAS1415 <- data1415 %>%
filter(event_type == "foul")%>%
filter(team == "14SAS")%>%
group_by(team,player) %>%
summarise(foul = sum(event_type == "foul"))
SAS1516 <- data1516 %>%
filter(event_type == "foul")%>%
filter(team == "15SAS")%>%
group_by(team,player) %>%
summarise(foul = sum(event_type == "foul"))
sumfoul <- rbind(SAS1415,SAS1516)
##block for 2 years
data1516block <- data1516 %>%
filter(!is.na(block)) %>%
mutate(blo = 1)
sumblock1516 <- data1516block %>%
filter(OT != 1) %>%
group_by(OT, block) %>%
summarise(blocks = sum(blo))
sumblock1516 <- sumblock1516 %>%
filter(OT == "15SAS")
sumblock1516 <- rename(sumblock1516,team = OT, player = block)
data1415block <- data1415 %>%
filter(!is.na(block)) %>%
mutate(blo = 1)
sumblock1415 <- data1415block %>%
filter(OT != 1) %>%
group_by(OT, block) %>%
summarise(blocks = sum(blo))
sumblock1415 <- sumblock1415 %>%
filter(OT == "14SAS")
sumblock1415 <- rename(sumblock1415,team = OT, player = block)
sumblock <- rbind(sumblock1415,sumblock1516)
data1516steal <- data1516 %>%
filter(!is.na(steal)) %>%
mutate(ste = 1)
sumsteal1516 <- data1516steal %>%
group_by(OT, steal) %>%
summarise(steals = sum(ste))
sumsteal1516 <- sumsteal1516 %>%
filter(OT == "15SAS")
sumsteal1516 <- rename(sumsteal1516,team = OT, player = steal)
data1415steal <- data1415 %>%
filter(!is.na(steal)) %>%
mutate(ste = 1)
sumsteal1415 <- data1415steal %>%
group_by(OT, steal) %>%
summarise(steals = sum(ste))
sumsteal1415 <- sumsteal1415 %>%
filter(OT == "14SAS")
sumsteal1415 <- rename(sumsteal1415,team = OT, player = steal)
sumsteal <- rbind(sumsteal1415,sumsteal1516)
summarySAS <- left_join(sumfoul,sumblock, by = c("team", "player"))
summarySAS <- left_join(summarySAS, sumsteal, by = c("team", "player"))
summarySAS <- summarySAS %>% mutate(blockperfoul = blocks/foul, stealperfoul = steals/foul)
summarySAS$team <- sub("14SAS", "2014", summarySAS$team)
summarySAS$team <- sub("15SAS", "2015", summarySAS$team)
summarySAS <- summarySAS %>% rename(Year = team)
View(summarySAS)
t.test(summarySAS$foul)
t.test(summarySAS$blockperfoul)
t.test(summarySAS$blockperfoul)
summary %>%
ggplot(aes(blockperfoul)) %>%
geom_boxplot()
t.test(summarySAS$blockperfoul)
summary %>%
ggplot(aes(blockperfoul)) %>%
geom_boxplot(aes(blockperfoul))
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(blockperfoul)) %>%
geom_boxplot(aes(blockperfoul))
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(blockperfoul)) %>%
geom_boxplot()
View(summarySAS)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE)
GMD <- read.csv("GarlicMustardData.csv")
setwd("D:/College Study/DA 101/RPractice/Lab2")
knitr::opts_chunk$set(echo = FALSE,warning = FALSE)
GMD <- read.csv("GarlicMustardData.csv")
setwd("D:/College Study/DA 101/RPractice/Lab2 and Project 1")
library(dplyr)
library(ggplot2)
library(readr)
library(knitr)
GMD <- read_csv("GarlicMustardData.csv")
G <- select(GMD,Region,TotalDens,Herb,bio13) [1:10,]
kable(G)
HerbSummary <- GMD %>% mutate(H = ifelse(Herb > .5,"Above 50%","Below 50%")) %>%
filter(!is.na(H)) %>%
group_by(Region,H) %>%
summarize(MeanNumber = mean(TotalDens,na.rm = TRUE))
p <- ggplot(GMD,aes(TotalDens)) +
geom_histogram(fill="midnightblue")
p + ggtitle("Mean Number of Plants per Square Meter") +
labs(x="Mean Number",y="Counts") + facet_wrap(~Region)
GMD %>% ggplot(aes(x= Region, y = TotalDens)) +
geom_boxplot(fill = "pink",colour="orange") +
ylab("Mean Number of Plants per Meter Square") +
ggtitle("Mean Number of Plants per Square Meter, Boxplot")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(x = Year, y = blockperfoul)) %>%
geom_boxplot()
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(x = Year, y = blockperfoul)) %>%
geom_boxplot(fill = "pink",colour="orange")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(x = Year, y = foul)) %>%
geom_boxplot(fill = "pink",colour="orange")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(x = Year, y = blockperfoul)) +
geom_boxplot(fill = "pink",colour="orange")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(blockperfoul)) +
geom_boxplot(fill = "pink",colour="orange")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(y= blockperfoul)) +
geom_boxplot(fill = "pink",colour="orange")
t.test(summarySAS$blockperfoul)
summarySAS %>%
ggplot(aes(x = Year, y = blockperfoul)) +
geom_boxplot(fill = "pink",colour="orange")
q{}
q()
dbinom(16, 120, 0.08, log = FALSE)
binom.test(16, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(6, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(8, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(32, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(5, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(5, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
dbinom(16, 120, 0.08, log = FALSE)
dbinom(6, 120, 0.12, log = FALSE)
binom.test(16, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(16, 120, p = 0.5,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(16, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(6, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(8, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(16, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(6, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(12, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(12, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(16, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(15, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(16, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(15, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(20, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(120, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(5, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(6, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(15, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(17, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
binom.test(15, 120, p = 0.08,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
dbinom(16, 120, 0.12, log = FALSE)
binom.test(16, 120, p = 0.12,
alternative = c("two.sided", "less", "greater"),
conf.level = 0.95)
sum(dbinom(16:120, 120, 0.08))
sum(dbinom(15:120, 120, 0.08))
sum(dbinom(14:120, 120, 0.08))
sum(dbinom(0:16, 120, 0.12))
sum(dbinom(15:120, 120, 0.08))
sum(dbinom(16:120, 120, 0.08))
clear
sum(dbinom(14:120, 120, 0.08))
sum(dbinom(15:120, 120, 0.08))
sum(dbinom(13:120, 120, 0.08))
sum(dbinom(0:15,120,0.08))
qchisq(0.05, 839)
qchisq(0.05, 6)
qchisq(0.95, 6)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/TakeHome2")
##read in the data file in to object
fooddata <- read.csv('Food_Table.csv')
fooddata <- fooddata %>% rename(Food_Code = ï..Food_Code)
#Question 1 - create a simple linear regression model
model1 <- lm(Calories~Solid_Fats, fooddata)
summary(model1)
#Question 2
residual_beefandbean = 331 - 95.43734 - 1.82438*70
print(residual_beefandbean)
#90% confidence interval
predict(model1,data.frame(Solid_Fats=70), interval = 'confidence', level = 0.90)
#Question 3 - create a multiple linear regression model
model2 <- lm(Calories ~ Solid_Fats + Saturated_Fats + Added_Sugars, fooddata)
summary(model2)
cor(fooddata$Solid_Fats, fooddata$Saturated_Fats)
#Question 4
model3 <- lm(sqrt(Calories) ~ Solid_Fats + Saturated_Fats + Added_Sugars, fooddata)
summary(model3)
qqnorm(model3$resid)
qqline(model3$resid)
View(fooddata)
fooddata$Display_Name[592]
fooddata$Display_Name[592]
fooddata$Display_Name[1284]
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('epldata_working.csv')
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('epldata.csv')
fifa <- read.csv('fifa.csv)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('epldata.csv')
fifa <- read.csv('fifa.csv')
View(epl)
View(fifa)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('data1.csv')
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
#epl <- read.csv('data1.csv')
fifa <- read.csv('data2.csv')
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats")
##read in the data file in to object
#epl <- read.csv('data1.csv')
fifa <- read.csv('data2.csv')
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('data1.csv')
fifa <- read.csv('data2.csv')
View(epl)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('data1.csv')
fifa <- read.csv('data2.csv')
View(fifa)
View(epl)
data <- merge(epl, fifa, by="name")
View(data)
data <- merge(epl, fifa, by= c("name","club"))
View(data)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
##import library package
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
library(knitr)
library(pander)
library(MASS)
##set working directory
setwd("D:/College Study/MATH 242 - Applied Stats/Final Project")
##read in the data file in to object
epl <- read.csv('data1.csv')
fifa <- read.csv('data2.csv')
data <- merge(epl, fifa, by= c("name","club"))
View(data)
data <- merge(epl, fifa, by= c("name","club"))
data <- subset(data, select = -c(age.y))
View(data)
data <- merge(epl, fifa, by= c("name","club"))
data <- subset(data, select = -c(age.y))
data <- rename(data, 'age.x' = 'age')
data <- merge(epl, fifa, by= c("name","club"))
data <- subset(data, select = -c(age.y))
data <- rename(data, age.x = age)
data <- merge(epl, fifa, by= c("name","club"))
data <- subset(data, select = -c(age.y))
data <- rename(data, c('age.x' = 'age'))
View(data)
write.csv(data, file = "MyData.csv")
names(data)[names(data) == "age.x"] <- "age"
View(data)
write.csv(data, file = "MyData.csv")
